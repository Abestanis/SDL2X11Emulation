#ifndef _KEY_SYM_LIST_H_
#define _KEY_SYM_LIST_H_

#include "X11/keysym.h"

static const struct {
    KeySym keySym;
    const char* name;
} KEY_SYM_LIST[] = {
    {XK_VoidSymbol, "VoidSymbol"},
    #ifdef XK_MISCELLANY
    {XK_BackSpace, "BackSpace"},
    {XK_Tab, "Tab"},
    {XK_Linefeed, "Linefeed"},
    {XK_Clear, "Clear"},
    {XK_Return, "Return"},
    {XK_Pause, "Pause"},
    {XK_Scroll_Lock, "Scroll_Lock"},
    {XK_Sys_Req, "Sys_Req"},
    {XK_Escape, "Escape"},
    {XK_Delete, "Delete"},
    {XK_Multi_key, "Multi_key"},
    {XK_Kanji, "Kanji"},
    {XK_Muhenkan, "Muhenkan"},
    {XK_Henkan_Mode, "Henkan_Mode"},
    {XK_Henkan, "Henkan"},
    {XK_Romaji, "Romaji"},
    {XK_Hiragana, "Hiragana"},
    {XK_Katakana, "Katakana"},
    {XK_Hiragana_Katakana, "Hiragana_Katakana"},
    {XK_Zenkaku, "Zenkaku"},
    {XK_Hankaku, "Hankaku"},
    {XK_Zenkaku_Hankaku, "Zenkaku_Hankaku"},
    {XK_Touroku, "Touroku"},
    {XK_Massyo, "Massyo"},
    {XK_Kana_Lock, "Kana_Lock"},
    {XK_Kana_Shift, "Kana_Shift"},
    {XK_Eisu_Shift, "Eisu_Shift"},
    {XK_Eisu_toggle, "Eisu_toggle"},
    {XK_Home, "Home"},
    {XK_Left, "Left"},
    {XK_Up, "Up"},
    {XK_Right, "Right"},
    {XK_Down, "Down"},
    {XK_Prior, "Prior"},
    {XK_Page_Up, "Page_Up"},
    {XK_Next, "Next"},
    {XK_Page_Down, "Page_Down"},
    {XK_End, "End"},
    {XK_Begin, "Begin"},
    {XK_Select, "Select"},
    {XK_Print, "Print"},
    {XK_Execute, "Execute"},
    {XK_Insert, "Insert"},
    {XK_Undo, "Undo"},
    {XK_Redo, "Redo"},
    {XK_Menu, "Menu"},
    {XK_Find, "Find"},
    {XK_Cancel, "Cancel"},
    {XK_Help, "Help"},
    {XK_Break, "Break"},
    {XK_Mode_switch, "Mode_switch"},
    {XK_script_switch, "script_switch"},
    {XK_Num_Lock, "Num_Lock"},
    {XK_KP_Space, "KP_Space"},
    {XK_KP_Tab, "KP_Tab"},
    {XK_KP_Enter, "KP_Enter"},
    {XK_KP_F1, "KP_F1"},
    {XK_KP_F2, "KP_F2"},
    {XK_KP_F3, "KP_F3"},
    {XK_KP_F4, "KP_F4"},
    {XK_KP_Home, "KP_Home"},
    {XK_KP_Left, "KP_Left"},
    {XK_KP_Up, "KP_Up"},
    {XK_KP_Right, "KP_Right"},
    {XK_KP_Down, "KP_Down"},
    {XK_KP_Prior, "KP_Prior"},
    {XK_KP_Page_Up, "KP_Page_Up"},
    {XK_KP_Next, "KP_Next"},
    {XK_KP_Page_Down, "KP_Page_Down"},
    {XK_KP_End, "KP_End"},
    {XK_KP_Begin, "KP_Begin"},
    {XK_KP_Insert, "KP_Insert"},
    {XK_KP_Delete, "KP_Delete"},
    {XK_KP_Equal, "KP_Equal"},
    {XK_KP_Multiply, "KP_Multiply"},
    {XK_KP_Add, "KP_Add"},
    {XK_KP_Separator, "KP_Separator"},
    {XK_KP_Subtract, "KP_Subtract"},
    {XK_KP_Decimal, "KP_Decimal"},
    {XK_KP_Divide, "KP_Divide"},
    {XK_KP_0, "KP_0"},
    {XK_KP_1, "KP_1"},
    {XK_KP_2, "KP_2"},
    {XK_KP_3, "KP_3"},
    {XK_KP_4, "KP_4"},
    {XK_KP_5, "KP_5"},
    {XK_KP_6, "KP_6"},
    {XK_KP_7, "KP_7"},
    {XK_KP_8, "KP_8"},
    {XK_KP_9, "KP_9"},
    {XK_F1, "F1"},
    {XK_F2, "F2"},
    {XK_F3, "F3"},
    {XK_F4, "F4"},
    {XK_F5, "F5"},
    {XK_F6, "F6"},
    {XK_F7, "F7"},
    {XK_F8, "F8"},
    {XK_F9, "F9"},
    {XK_F10, "F10"},
    {XK_F11, "F11"},
    {XK_L1, "L1"},
    {XK_F12, "F12"},
    {XK_L2, "L2"},
    {XK_F13, "F13"},
    {XK_L3, "L3"},
    {XK_F14, "F14"},
    {XK_L4, "L4"},
    {XK_F15, "F15"},
    {XK_L5, "L5"},
    {XK_F16, "F16"},
    {XK_L6, "L6"},
    {XK_F17, "F17"},
    {XK_L7, "L7"},
    {XK_F18, "F18"},
    {XK_L8, "L8"},
    {XK_F19, "F19"},
    {XK_L9, "L9"},
    {XK_F20, "F20"},
    {XK_L10, "L10"},
    {XK_F21, "F21"},
    {XK_R1, "R1"},
    {XK_F22, "F22"},
    {XK_R2, "R2"},
    {XK_F23, "F23"},
    {XK_R3, "R3"},
    {XK_F24, "F24"},
    {XK_R4, "R4"},
    {XK_F25, "F25"},
    {XK_R5, "R5"},
    {XK_F26, "F26"},
    {XK_R6, "R6"},
    {XK_F27, "F27"},
    {XK_R7, "R7"},
    {XK_F28, "F28"},
    {XK_R8, "R8"},
    {XK_F29, "F29"},
    {XK_R9, "R9"},
    {XK_F30, "F30"},
    {XK_R10, "R10"},
    {XK_F31, "F31"},
    {XK_R11, "R11"},
    {XK_F32, "F32"},
    {XK_R12, "R12"},
    {XK_F33, "F33"},
    {XK_R13, "R13"},
    {XK_F34, "F34"},
    {XK_R14, "R14"},
    {XK_F35, "F35"},
    {XK_R15, "R15"},
    {XK_Shift_L, "Shift_L"},
    {XK_Shift_R, "Shift_R"},
    {XK_Control_L, "Control_L"},
    {XK_Control_R, "Control_R"},
    {XK_Caps_Lock, "Caps_Lock"},
    {XK_Shift_Lock, "Shift_Lock"},
    {XK_Meta_L, "Meta_L"},
    {XK_Meta_R, "Meta_R"},
    {XK_Alt_L, "Alt_L"},
    {XK_Alt_R, "Alt_R"},
    {XK_Super_L, "Super_L"},
    {XK_Super_R, "Super_R"},
    {XK_Hyper_L, "Hyper_L"},
    {XK_Hyper_R, "Hyper_R"},
    #endif /* XK_MISCELLANY */
    #ifdef XK_LATIN1
    {XK_space, "space"},
    {XK_exclam, "exclam"},
    {XK_quotedbl, "quotedbl"},
    {XK_numbersign, "numbersign"},
    {XK_dollar, "dollar"},
    {XK_percent, "percent"},
    {XK_ampersand, "ampersand"},
    {XK_apostrophe, "apostrophe"},
    {XK_quoteright, "quoteright"},
    {XK_parenleft, "parenleft"},
    {XK_parenright, "parenright"},
    {XK_asterisk, "asterisk"},
    {XK_plus, "plus"},
    {XK_comma, "comma"},
    {XK_minus, "minus"},
    {XK_period, "period"},
    {XK_slash, "slash"},
    // TODO: Remove these from list
    {XK_0, "0"},
    {XK_1, "1"},
    {XK_2, "2"},
    {XK_3, "3"},
    {XK_4, "4"},
    {XK_5, "5"},
    {XK_6, "6"},
    {XK_7, "7"},
    {XK_8, "8"},
    {XK_9, "9"},
    {XK_colon, "colon"},
    {XK_semicolon, "semicolon"},
    {XK_less, "less"},
    {XK_equal, "equal"},
    {XK_greater, "greater"},
    {XK_question, "question"},
    {XK_at, "at"},
    {XK_A, "A"},
    {XK_B, "B"},
    {XK_C, "C"},
    {XK_D, "D"},
    {XK_E, "E"},
    {XK_F, "F"},
    {XK_G, "G"},
    {XK_H, "H"},
    {XK_I, "I"},
    {XK_J, "J"},
    {XK_K, "K"},
    {XK_L, "L"},
    {XK_M, "M"},
    {XK_N, "N"},
    {XK_O, "O"},
    {XK_P, "P"},
    {XK_Q, "Q"},
    {XK_R, "R"},
    {XK_S, "S"},
    {XK_T, "T"},
    {XK_U, "U"},
    {XK_V, "V"},
    {XK_W, "W"},
    {XK_X, "X"},
    {XK_Y, "Y"},
    {XK_Z, "Z"},
    {XK_bracketleft, "bracketleft"},
    {XK_backslash, "backslash"},
    {XK_bracketright, "bracketright"},
    {XK_asciicircum, "asciicircum"},
    {XK_underscore, "underscore"},
    {XK_grave, "grave"},
    {XK_quoteleft, "quoteleft"},
    {XK_a, "a"},
    {XK_b, "b"},
    {XK_c, "c"},
    {XK_d, "d"},
    {XK_e, "e"},
    {XK_f, "f"},
    {XK_g, "g"},
    {XK_h, "h"},
    {XK_i, "i"},
    {XK_j, "j"},
    {XK_k, "k"},
    {XK_l, "l"},
    {XK_m, "m"},
    {XK_n, "n"},
    {XK_o, "o"},
    {XK_p, "p"},
    {XK_q, "q"},
    {XK_r, "r"},
    {XK_s, "s"},
    {XK_t, "t"},
    {XK_u, "u"},
    {XK_v, "v"},
    {XK_w, "w"},
    {XK_x, "x"},
    {XK_y, "y"},
    {XK_z, "z"},
    {XK_braceleft, "braceleft"},
    {XK_bar, "bar"},
    {XK_braceright, "braceright"},
    {XK_asciitilde, "asciitilde"},
    {XK_nobreakspace, "nobreakspace"},
    {XK_exclamdown, "exclamdown"},
    {XK_cent, "cent"},
    {XK_sterling, "sterling"},
    {XK_currency, "currency"},
    {XK_yen, "yen"},
    {XK_brokenbar, "brokenbar"},
    {XK_section, "section"},
    {XK_diaeresis, "diaeresis"},
    {XK_copyright, "copyright"},
    {XK_ordfeminine, "ordfeminine"},
    {XK_guillemotleft, "guillemotleft"},
    {XK_notsign, "notsign"},
    {XK_hyphen, "hyphen"},
    {XK_registered, "registered"},
    {XK_macron, "macron"},
    {XK_degree, "degree"},
    {XK_plusminus, "plusminus"},
    {XK_twosuperior, "twosuperior"},
    {XK_threesuperior, "threesuperior"},
    {XK_acute, "acute"},
    {XK_mu, "mu"},
    {XK_paragraph, "paragraph"},
    {XK_periodcentered, "periodcentered"},
    {XK_cedilla, "cedilla"},
    {XK_onesuperior, "onesuperior"},
    {XK_masculine, "masculine"},
    {XK_guillemotright, "guillemotright"},
    {XK_onequarter, "onequarter"},
    {XK_onehalf, "onehalf"},
    {XK_threequarters, "threequarters"},
    {XK_questiondown, "questiondown"},
    {XK_Agrave, "Agrave"},
    {XK_Aacute, "Aacute"},
    {XK_Acircumflex, "Acircumflex"},
    {XK_Atilde, "Atilde"},
    {XK_Adiaeresis, "Adiaeresis"},
    {XK_Aring, "Aring"},
    {XK_AE, "AE"},
    {XK_Ccedilla, "Ccedilla"},
    {XK_Egrave, "Egrave"},
    {XK_Eacute, "Eacute"},
    {XK_Ecircumflex, "Ecircumflex"},
    {XK_Ediaeresis, "Ediaeresis"},
    {XK_Igrave, "Igrave"},
    {XK_Iacute, "Iacute"},
    {XK_Icircumflex, "Icircumflex"},
    {XK_Idiaeresis, "Idiaeresis"},
    {XK_ETH, "ETH"},
    {XK_Eth, "Eth"},
    {XK_Ntilde, "Ntilde"},
    {XK_Ograve, "Ograve"},
    {XK_Oacute, "Oacute"},
    {XK_Ocircumflex, "Ocircumflex"},
    {XK_Otilde, "Otilde"},
    {XK_Odiaeresis, "Odiaeresis"},
    {XK_multiply, "multiply"},
    {XK_Ooblique, "Ooblique"},
    {XK_Ugrave, "Ugrave"},
    {XK_Uacute, "Uacute"},
    {XK_Ucircumflex, "Ucircumflex"},
    {XK_Udiaeresis, "Udiaeresis"},
    {XK_Yacute, "Yacute"},
    {XK_THORN, "THORN"},
    {XK_Thorn, "Thorn"},
    {XK_ssharp, "ssharp"},
    {XK_agrave, "agrave"},
    {XK_aacute, "aacute"},
    {XK_acircumflex, "acircumflex"},
    {XK_atilde, "atilde"},
    {XK_adiaeresis, "adiaeresis"},
    {XK_aring, "aring"},
    {XK_ae, "ae"},
    {XK_ccedilla, "ccedilla"},
    {XK_egrave, "egrave"},
    {XK_eacute, "eacute"},
    {XK_ecircumflex, "ecircumflex"},
    {XK_ediaeresis, "ediaeresis"},
    {XK_igrave, "igrave"},
    {XK_iacute, "iacute"},
    {XK_icircumflex, "icircumflex"},
    {XK_idiaeresis, "idiaeresis"},
    {XK_eth, "eth"},
    {XK_ntilde, "ntilde"},
    {XK_ograve, "ograve"},
    {XK_oacute, "oacute"},
    {XK_ocircumflex, "ocircumflex"},
    {XK_otilde, "otilde"},
    {XK_odiaeresis, "odiaeresis"},
    {XK_division, "division"},
    {XK_oslash, "oslash"},
    {XK_ugrave, "ugrave"},
    {XK_uacute, "uacute"},
    {XK_ucircumflex, "ucircumflex"},
    {XK_udiaeresis, "udiaeresis"},
    {XK_yacute, "yacute"},
    {XK_thorn, "thorn"},
    {XK_ydiaeresis, "ydiaeresis"},
    #endif /* XK_LATIN1 */
    #ifdef XK_LATIN2
    {XK_Aogonek, "Aogonek"},
    {XK_breve, "breve"},
    {XK_Lstroke, "Lstroke"},
    {XK_Lcaron, "Lcaron"},
    {XK_Sacute, "Sacute"},
    {XK_Scaron, "Scaron"},
    {XK_Scedilla, "Scedilla"},
    {XK_Tcaron, "Tcaron"},
    {XK_Zacute, "Zacute"},
    {XK_Zcaron, "Zcaron"},
    {XK_Zabovedot, "Zabovedot"},
    {XK_aogonek, "aogonek"},
    {XK_ogonek, "ogonek"},
    {XK_lstroke, "lstroke"},
    {XK_lcaron, "lcaron"},
    {XK_sacute, "sacute"},
    {XK_caron, "caron"},
    {XK_scaron, "scaron"},
    {XK_scedilla, "scedilla"},
    {XK_tcaron, "tcaron"},
    {XK_zacute, "zacute"},
    {XK_doubleacute, "doubleacute"},
    {XK_zcaron, "zcaron"},
    {XK_zabovedot, "zabovedot"},
    {XK_Racute, "Racute"},
    {XK_Abreve, "Abreve"},
    {XK_Lacute, "Lacute"},
    {XK_Cacute, "Cacute"},
    {XK_Ccaron, "Ccaron"},
    {XK_Eogonek, "Eogonek"},
    {XK_Ecaron, "Ecaron"},
    {XK_Dcaron, "Dcaron"},
    {XK_Dstroke, "Dstroke"},
    {XK_Nacute, "Nacute"},
    {XK_Ncaron, "Ncaron"},
    {XK_Odoubleacute, "Odoubleacute"},
    {XK_Rcaron, "Rcaron"},
    {XK_Uring, "Uring"},
    {XK_Udoubleacute, "Udoubleacute"},
    {XK_Tcedilla, "Tcedilla"},
    {XK_racute, "racute"},
    {XK_abreve, "abreve"},
    {XK_lacute, "lacute"},
    {XK_cacute, "cacute"},
    {XK_ccaron, "ccaron"},
    {XK_eogonek, "eogonek"},
    {XK_ecaron, "ecaron"},
    {XK_dcaron, "dcaron"},
    {XK_dstroke, "dstroke"},
    {XK_nacute, "nacute"},
    {XK_ncaron, "ncaron"},
    {XK_odoubleacute, "odoubleacute"},
    {XK_udoubleacute, "udoubleacute"},
    {XK_rcaron, "rcaron"},
    {XK_uring, "uring"},
    {XK_tcedilla, "tcedilla"},
    {XK_abovedot, "abovedot"},
    #endif /* XK_LATIN2 */
    #ifdef XK_LATIN3
    {XK_Hstroke, "Hstroke"},
    {XK_Hcircumflex, "Hcircumflex"},
    {XK_Iabovedot, "Iabovedot"},
    {XK_Gbreve, "Gbreve"},
    {XK_Jcircumflex, "Jcircumflex"},
    {XK_hstroke, "hstroke"},
    {XK_hcircumflex, "hcircumflex"},
    {XK_idotless, "idotless"},
    {XK_gbreve, "gbreve"},
    {XK_jcircumflex, "jcircumflex"},
    {XK_Cabovedot, "Cabovedot"},
    {XK_Ccircumflex, "Ccircumflex"},
    {XK_Gabovedot, "Gabovedot"},
    {XK_Gcircumflex, "Gcircumflex"},
    {XK_Ubreve, "Ubreve"},
    {XK_Scircumflex, "Scircumflex"},
    {XK_cabovedot, "cabovedot"},
    {XK_ccircumflex, "ccircumflex"},
    {XK_gabovedot, "gabovedot"},
    {XK_gcircumflex, "gcircumflex"},
    {XK_ubreve, "ubreve"},
    {XK_scircumflex, "scircumflex"},
    #endif /* XK_LATIN3 */
    #ifdef XK_LATIN4
    {XK_kra, "kra"},
    {XK_kappa, "kappa"},
    {XK_Rcedilla, "Rcedilla"},
    {XK_Itilde, "Itilde"},
    {XK_Lcedilla, "Lcedilla"},
    {XK_Emacron, "Emacron"},
    {XK_Gcedilla, "Gcedilla"},
    {XK_Tslash, "Tslash"},
    {XK_rcedilla, "rcedilla"},
    {XK_itilde, "itilde"},
    {XK_lcedilla, "lcedilla"},
    {XK_emacron, "emacron"},
    {XK_gcedilla, "gcedilla"},
    {XK_tslash, "tslash"},
    {XK_ENG, "ENG"},
    {XK_eng, "eng"},
    {XK_Amacron, "Amacron"},
    {XK_Iogonek, "Iogonek"},
    {XK_Eabovedot, "Eabovedot"},
    {XK_Imacron, "Imacron"},
    {XK_Ncedilla, "Ncedilla"},
    {XK_Omacron, "Omacron"},
    {XK_Kcedilla, "Kcedilla"},
    {XK_Uogonek, "Uogonek"},
    {XK_Utilde, "Utilde"},
    {XK_Umacron, "Umacron"},
    {XK_amacron, "amacron"},
    {XK_iogonek, "iogonek"},
    {XK_eabovedot, "eabovedot"},
    {XK_imacron, "imacron"},
    {XK_ncedilla, "ncedilla"},
    {XK_omacron, "omacron"},
    {XK_kcedilla, "kcedilla"},
    {XK_uogonek, "uogonek"},
    {XK_utilde, "utilde"},
    {XK_umacron, "umacron"},
    #endif /* XK_LATIN4 */
    #ifdef XK_KATAKANA
    {XK_overline, "overline"},
    {XK_kana_fullstop, "kana_fullstop"},
    {XK_kana_openingbracket, "kana_openingbracket"},
    {XK_kana_closingbracket, "kana_closingbracket"},
    {XK_kana_comma, "kana_comma"},
    {XK_kana_conjunctive, "kana_conjunctive"},
    {XK_kana_middledot, "kana_middledot"},
    {XK_kana_WO, "kana_WO"},
    {XK_kana_a, "kana_a"},
    {XK_kana_i, "kana_i"},
    {XK_kana_u, "kana_u"},
    {XK_kana_e, "kana_e"},
    {XK_kana_o, "kana_o"},
    {XK_kana_ya, "kana_ya"},
    {XK_kana_yu, "kana_yu"},
    {XK_kana_yo, "kana_yo"},
    {XK_kana_tsu, "kana_tsu"},
    {XK_kana_tu, "kana_tu"},
    {XK_prolongedsound, "prolongedsound"},
    {XK_kana_A, "kana_A"},
    {XK_kana_I, "kana_I"},
    {XK_kana_U, "kana_U"},
    {XK_kana_E, "kana_E"},
    {XK_kana_O, "kana_O"},
    {XK_kana_KA, "kana_KA"},
    {XK_kana_KI, "kana_KI"},
    {XK_kana_KU, "kana_KU"},
    {XK_kana_KE, "kana_KE"},
    {XK_kana_KO, "kana_KO"},
    {XK_kana_SA, "kana_SA"},
    {XK_kana_SHI, "kana_SHI"},
    {XK_kana_SU, "kana_SU"},
    {XK_kana_SE, "kana_SE"},
    {XK_kana_SO, "kana_SO"},
    {XK_kana_TA, "kana_TA"},
    {XK_kana_CHI, "kana_CHI"},
    {XK_kana_TI, "kana_TI"},
    {XK_kana_TSU, "kana_TSU"},
    {XK_kana_TU, "kana_TU"},
    {XK_kana_TE, "kana_TE"},
    {XK_kana_TO, "kana_TO"},
    {XK_kana_NA, "kana_NA"},
    {XK_kana_NI, "kana_NI"},
    {XK_kana_NU, "kana_NU"},
    {XK_kana_NE, "kana_NE"},
    {XK_kana_NO, "kana_NO"},
    {XK_kana_HA, "kana_HA"},
    {XK_kana_HI, "kana_HI"},
    {XK_kana_FU, "kana_FU"},
    {XK_kana_HU, "kana_HU"},
    {XK_kana_HE, "kana_HE"},
    {XK_kana_HO, "kana_HO"},
    {XK_kana_MA, "kana_MA"},
    {XK_kana_MI, "kana_MI"},
    {XK_kana_MU, "kana_MU"},
    {XK_kana_ME, "kana_ME"},
    {XK_kana_MO, "kana_MO"},
    {XK_kana_YA, "kana_YA"},
    {XK_kana_YU, "kana_YU"},
    {XK_kana_YO, "kana_YO"},
    {XK_kana_RA, "kana_RA"},
    {XK_kana_RI, "kana_RI"},
    {XK_kana_RU, "kana_RU"},
    {XK_kana_RE, "kana_RE"},
    {XK_kana_RO, "kana_RO"},
    {XK_kana_WA, "kana_WA"},
    {XK_kana_N, "kana_N"},
    {XK_voicedsound, "voicedsound"},
    {XK_semivoicedsound, "semivoicedsound"},
    {XK_kana_switch, "kana_switch"},
    #endif /* XK_KATAKANA */
    #ifdef XK_ARABIC
    {XK_Arabic_comma, "Arabic_comma"},
    {XK_Arabic_semicolon, "Arabic_semicolon"},
    {XK_Arabic_question_mark, "Arabic_question_mark"},
    {XK_Arabic_hamza, "Arabic_hamza"},
    {XK_Arabic_maddaonalef, "Arabic_maddaonalef"},
    {XK_Arabic_hamzaonalef, "Arabic_hamzaonalef"},
    {XK_Arabic_hamzaonwaw, "Arabic_hamzaonwaw"},
    {XK_Arabic_hamzaunderalef, "Arabic_hamzaunderalef"},
    {XK_Arabic_hamzaonyeh, "Arabic_hamzaonyeh"},
    {XK_Arabic_alef, "Arabic_alef"},
    {XK_Arabic_beh, "Arabic_beh"},
    {XK_Arabic_tehmarbuta, "Arabic_tehmarbuta"},
    {XK_Arabic_teh, "Arabic_teh"},
    {XK_Arabic_theh, "Arabic_theh"},
    {XK_Arabic_jeem, "Arabic_jeem"},
    {XK_Arabic_hah, "Arabic_hah"},
    {XK_Arabic_khah, "Arabic_khah"},
    {XK_Arabic_dal, "Arabic_dal"},
    {XK_Arabic_thal, "Arabic_thal"},
    {XK_Arabic_ra, "Arabic_ra"},
    {XK_Arabic_zain, "Arabic_zain"},
    {XK_Arabic_seen, "Arabic_seen"},
    {XK_Arabic_sheen, "Arabic_sheen"},
    {XK_Arabic_sad, "Arabic_sad"},
    {XK_Arabic_dad, "Arabic_dad"},
    {XK_Arabic_tah, "Arabic_tah"},
    {XK_Arabic_zah, "Arabic_zah"},
    {XK_Arabic_ain, "Arabic_ain"},
    {XK_Arabic_ghain, "Arabic_ghain"},
    {XK_Arabic_tatweel, "Arabic_tatweel"},
    {XK_Arabic_feh, "Arabic_feh"},
    {XK_Arabic_qaf, "Arabic_qaf"},
    {XK_Arabic_kaf, "Arabic_kaf"},
    {XK_Arabic_lam, "Arabic_lam"},
    {XK_Arabic_meem, "Arabic_meem"},
    {XK_Arabic_noon, "Arabic_noon"},
    {XK_Arabic_ha, "Arabic_ha"},
    {XK_Arabic_heh, "Arabic_heh"},
    {XK_Arabic_waw, "Arabic_waw"},
    {XK_Arabic_alefmaksura, "Arabic_alefmaksura"},
    {XK_Arabic_yeh, "Arabic_yeh"},
    {XK_Arabic_fathatan, "Arabic_fathatan"},
    {XK_Arabic_dammatan, "Arabic_dammatan"},
    {XK_Arabic_kasratan, "Arabic_kasratan"},
    {XK_Arabic_fatha, "Arabic_fatha"},
    {XK_Arabic_damma, "Arabic_damma"},
    {XK_Arabic_kasra, "Arabic_kasra"},
    {XK_Arabic_shadda, "Arabic_shadda"},
    {XK_Arabic_sukun, "Arabic_sukun"},
    {XK_Arabic_switch, "Arabic_switch"},
    #endif /* XK_ARABIC */
    #ifdef XK_CYRILLIC
    {XK_Serbian_dje, "Serbian_dje"},
    {XK_Macedonia_gje, "Macedonia_gje"},
    {XK_Cyrillic_io, "Cyrillic_io"},
    {XK_Ukrainian_ie, "Ukrainian_ie"},
    {XK_Ukranian_je, "Ukranian_je"},
    {XK_Macedonia_dse, "Macedonia_dse"},
    {XK_Ukrainian_i, "Ukrainian_i"},
    {XK_Ukranian_i, "Ukranian_i"},
    {XK_Ukrainian_yi, "Ukrainian_yi"},
    {XK_Ukranian_yi, "Ukranian_yi"},
    {XK_Cyrillic_je, "Cyrillic_je"},
    {XK_Serbian_je, "Serbian_je"},
    {XK_Cyrillic_lje, "Cyrillic_lje"},
    {XK_Serbian_lje, "Serbian_lje"},
    {XK_Cyrillic_nje, "Cyrillic_nje"},
    {XK_Serbian_nje, "Serbian_nje"},
    {XK_Serbian_tshe, "Serbian_tshe"},
    {XK_Macedonia_kje, "Macedonia_kje"},
    {XK_Byelorussian_shortu, "Byelorussian_shortu"},
    {XK_Cyrillic_dzhe, "Cyrillic_dzhe"},
    {XK_Serbian_dze, "Serbian_dze"},
    {XK_numerosign, "numerosign"},
    {XK_Serbian_DJE, "Serbian_DJE"},
    {XK_Macedonia_GJE, "Macedonia_GJE"},
    {XK_Cyrillic_IO, "Cyrillic_IO"},
    {XK_Ukrainian_IE, "Ukrainian_IE"},
    {XK_Ukranian_JE, "Ukranian_JE"},
    {XK_Macedonia_DSE, "Macedonia_DSE"},
    {XK_Ukrainian_I, "Ukrainian_I"},
    {XK_Ukranian_I, "Ukranian_I"},
    {XK_Ukrainian_YI, "Ukrainian_YI"},
    {XK_Ukranian_YI, "Ukranian_YI"},
    {XK_Cyrillic_JE, "Cyrillic_JE"},
    {XK_Serbian_JE, "Serbian_JE"},
    {XK_Cyrillic_LJE, "Cyrillic_LJE"},
    {XK_Serbian_LJE, "Serbian_LJE"},
    {XK_Cyrillic_NJE, "Cyrillic_NJE"},
    {XK_Serbian_NJE, "Serbian_NJE"},
    {XK_Serbian_TSHE, "Serbian_TSHE"},
    {XK_Macedonia_KJE, "Macedonia_KJE"},
    {XK_Byelorussian_SHORTU, "Byelorussian_SHORTU"},
    {XK_Cyrillic_DZHE, "Cyrillic_DZHE"},
    {XK_Serbian_DZE, "Serbian_DZE"},
    {XK_Cyrillic_yu, "Cyrillic_yu"},
    {XK_Cyrillic_a, "Cyrillic_a"},
    {XK_Cyrillic_be, "Cyrillic_be"},
    {XK_Cyrillic_tse, "Cyrillic_tse"},
    {XK_Cyrillic_de, "Cyrillic_de"},
    {XK_Cyrillic_ie, "Cyrillic_ie"},
    {XK_Cyrillic_ef, "Cyrillic_ef"},
    {XK_Cyrillic_ghe, "Cyrillic_ghe"},
    {XK_Cyrillic_ha, "Cyrillic_ha"},
    {XK_Cyrillic_i, "Cyrillic_i"},
    {XK_Cyrillic_shorti, "Cyrillic_shorti"},
    {XK_Cyrillic_ka, "Cyrillic_ka"},
    {XK_Cyrillic_el, "Cyrillic_el"},
    {XK_Cyrillic_em, "Cyrillic_em"},
    {XK_Cyrillic_en, "Cyrillic_en"},
    {XK_Cyrillic_o, "Cyrillic_o"},
    {XK_Cyrillic_pe, "Cyrillic_pe"},
    {XK_Cyrillic_ya, "Cyrillic_ya"},
    {XK_Cyrillic_er, "Cyrillic_er"},
    {XK_Cyrillic_es, "Cyrillic_es"},
    {XK_Cyrillic_te, "Cyrillic_te"},
    {XK_Cyrillic_u, "Cyrillic_u"},
    {XK_Cyrillic_zhe, "Cyrillic_zhe"},
    {XK_Cyrillic_ve, "Cyrillic_ve"},
    {XK_Cyrillic_softsign, "Cyrillic_softsign"},
    {XK_Cyrillic_yeru, "Cyrillic_yeru"},
    {XK_Cyrillic_ze, "Cyrillic_ze"},
    {XK_Cyrillic_sha, "Cyrillic_sha"},
    {XK_Cyrillic_e, "Cyrillic_e"},
    {XK_Cyrillic_shcha, "Cyrillic_shcha"},
    {XK_Cyrillic_che, "Cyrillic_che"},
    {XK_Cyrillic_hardsign, "Cyrillic_hardsign"},
    {XK_Cyrillic_YU, "Cyrillic_YU"},
    {XK_Cyrillic_A, "Cyrillic_A"},
    {XK_Cyrillic_BE, "Cyrillic_BE"},
    {XK_Cyrillic_TSE, "Cyrillic_TSE"},
    {XK_Cyrillic_DE, "Cyrillic_DE"},
    {XK_Cyrillic_IE, "Cyrillic_IE"},
    {XK_Cyrillic_EF, "Cyrillic_EF"},
    {XK_Cyrillic_GHE, "Cyrillic_GHE"},
    {XK_Cyrillic_HA, "Cyrillic_HA"},
    {XK_Cyrillic_I, "Cyrillic_I"},
    {XK_Cyrillic_SHORTI, "Cyrillic_SHORTI"},
    {XK_Cyrillic_KA, "Cyrillic_KA"},
    {XK_Cyrillic_EL, "Cyrillic_EL"},
    {XK_Cyrillic_EM, "Cyrillic_EM"},
    {XK_Cyrillic_EN, "Cyrillic_EN"},
    {XK_Cyrillic_O, "Cyrillic_O"},
    {XK_Cyrillic_PE, "Cyrillic_PE"},
    {XK_Cyrillic_YA, "Cyrillic_YA"},
    {XK_Cyrillic_ER, "Cyrillic_ER"},
    {XK_Cyrillic_ES, "Cyrillic_ES"},
    {XK_Cyrillic_TE, "Cyrillic_TE"},
    {XK_Cyrillic_U, "Cyrillic_U"},
    {XK_Cyrillic_ZHE, "Cyrillic_ZHE"},
    {XK_Cyrillic_VE, "Cyrillic_VE"},
    {XK_Cyrillic_SOFTSIGN, "Cyrillic_SOFTSIGN"},
    {XK_Cyrillic_YERU, "Cyrillic_YERU"},
    {XK_Cyrillic_ZE, "Cyrillic_ZE"},
    {XK_Cyrillic_SHA, "Cyrillic_SHA"},
    {XK_Cyrillic_E, "Cyrillic_E"},
    {XK_Cyrillic_SHCHA, "Cyrillic_SHCHA"},
    {XK_Cyrillic_CHE, "Cyrillic_CHE"},
    {XK_Cyrillic_HARDSIGN, "Cyrillic_HARDSIGN"},
    #endif /* XK_CYRILLIC */
    #ifdef XK_GREEK
    {XK_Greek_ALPHAaccent, "Greek_ALPHAaccent"},
    {XK_Greek_EPSILONaccent, "Greek_EPSILONaccent"},
    {XK_Greek_ETAaccent, "Greek_ETAaccent"},
    {XK_Greek_IOTAaccent, "Greek_IOTAaccent"},
    {XK_Greek_IOTAdiaeresis, "Greek_IOTAdiaeresis"},
    {XK_Greek_OMICRONaccent, "Greek_OMICRONaccent"},
    {XK_Greek_UPSILONaccent, "Greek_UPSILONaccent"},
    {XK_Greek_UPSILONdieresis, "Greek_UPSILONdieresis"},
    {XK_Greek_OMEGAaccent, "Greek_OMEGAaccent"},
    {XK_Greek_accentdieresis, "Greek_accentdieresis"},
    {XK_Greek_horizbar, "Greek_horizbar"},
    {XK_Greek_alphaaccent, "Greek_alphaaccent"},
    {XK_Greek_epsilonaccent, "Greek_epsilonaccent"},
    {XK_Greek_etaaccent, "Greek_etaaccent"},
    {XK_Greek_iotaaccent, "Greek_iotaaccent"},
    {XK_Greek_iotadieresis, "Greek_iotadieresis"},
    {XK_Greek_iotaaccentdieresis, "Greek_iotaaccentdieresis"},
    {XK_Greek_omicronaccent, "Greek_omicronaccent"},
    {XK_Greek_upsilonaccent, "Greek_upsilonaccent"},
    {XK_Greek_upsilondieresis, "Greek_upsilondieresis"},
    {XK_Greek_upsilonaccentdieresis, "Greek_upsilonaccentdieresis"},
    {XK_Greek_omegaaccent, "Greek_omegaaccent"},
    {XK_Greek_ALPHA, "Greek_ALPHA"},
    {XK_Greek_BETA, "Greek_BETA"},
    {XK_Greek_GAMMA, "Greek_GAMMA"},
    {XK_Greek_DELTA, "Greek_DELTA"},
    {XK_Greek_EPSILON, "Greek_EPSILON"},
    {XK_Greek_ZETA, "Greek_ZETA"},
    {XK_Greek_ETA, "Greek_ETA"},
    {XK_Greek_THETA, "Greek_THETA"},
    {XK_Greek_IOTA, "Greek_IOTA"},
    {XK_Greek_KAPPA, "Greek_KAPPA"},
    {XK_Greek_LAMDA, "Greek_LAMDA"},
    {XK_Greek_LAMBDA, "Greek_LAMBDA"},
    {XK_Greek_MU, "Greek_MU"},
    {XK_Greek_NU, "Greek_NU"},
    {XK_Greek_XI, "Greek_XI"},
    {XK_Greek_OMICRON, "Greek_OMICRON"},
    {XK_Greek_PI, "Greek_PI"},
    {XK_Greek_RHO, "Greek_RHO"},
    {XK_Greek_SIGMA, "Greek_SIGMA"},
    {XK_Greek_TAU, "Greek_TAU"},
    {XK_Greek_UPSILON, "Greek_UPSILON"},
    {XK_Greek_PHI, "Greek_PHI"},
    {XK_Greek_CHI, "Greek_CHI"},
    {XK_Greek_PSI, "Greek_PSI"},
    {XK_Greek_OMEGA, "Greek_OMEGA"},
    {XK_Greek_alpha, "Greek_alpha"},
    {XK_Greek_beta, "Greek_beta"},
    {XK_Greek_gamma, "Greek_gamma"},
    {XK_Greek_delta, "Greek_delta"},
    {XK_Greek_epsilon, "Greek_epsilon"},
    {XK_Greek_zeta, "Greek_zeta"},
    {XK_Greek_eta, "Greek_eta"},
    {XK_Greek_theta, "Greek_theta"},
    {XK_Greek_iota, "Greek_iota"},
    {XK_Greek_kappa, "Greek_kappa"},
    {XK_Greek_lamda, "Greek_lamda"},
    {XK_Greek_lambda, "Greek_lambda"},
    {XK_Greek_mu, "Greek_mu"},
    {XK_Greek_nu, "Greek_nu"},
    {XK_Greek_xi, "Greek_xi"},
    {XK_Greek_omicron, "Greek_omicron"},
    {XK_Greek_pi, "Greek_pi"},
    {XK_Greek_rho, "Greek_rho"},
    {XK_Greek_sigma, "Greek_sigma"},
    {XK_Greek_finalsmallsigma, "Greek_finalsmallsigma"},
    {XK_Greek_tau, "Greek_tau"},
    {XK_Greek_upsilon, "Greek_upsilon"},
    {XK_Greek_phi, "Greek_phi"},
    {XK_Greek_chi, "Greek_chi"},
    {XK_Greek_psi, "Greek_psi"},
    {XK_Greek_omega, "Greek_omega"},
    {XK_Greek_switch, "Greek_switch"},
    #endif /* XK_GREEK */
    #ifdef XK_TECHNICAL
    {XK_leftradical, "leftradical"},
    {XK_topleftradical, "topleftradical"},
    {XK_horizconnector, "horizconnector"},
    {XK_topintegral, "topintegral"},
    {XK_botintegral, "botintegral"},
    {XK_vertconnector, "vertconnector"},
    {XK_topleftsqbracket, "topleftsqbracket"},
    {XK_botleftsqbracket, "botleftsqbracket"},
    {XK_toprightsqbracket, "toprightsqbracket"},
    {XK_botrightsqbracket, "botrightsqbracket"},
    {XK_topleftparens, "topleftparens"},
    {XK_botleftparens, "botleftparens"},
    {XK_toprightparens, "toprightparens"},
    {XK_botrightparens, "botrightparens"},
    {XK_leftmiddlecurlybrace, "leftmiddlecurlybrace"},
    {XK_rightmiddlecurlybrace, "rightmiddlecurlybrace"},
    {XK_topleftsummation, "topleftsummation"},
    {XK_botleftsummation, "botleftsummation"},
    {XK_topvertsummationconnector, "topvertsummationconnector"},
    {XK_botvertsummationconnector, "botvertsummationconnector"},
    {XK_toprightsummation, "toprightsummation"},
    {XK_botrightsummation, "botrightsummation"},
    {XK_rightmiddlesummation, "rightmiddlesummation"},
    {XK_lessthanequal, "lessthanequal"},
    {XK_notequal, "notequal"},
    {XK_greaterthanequal, "greaterthanequal"},
    {XK_integral, "integral"},
    {XK_therefore, "therefore"},
    {XK_variation, "variation"},
    {XK_infinity, "infinity"},
    {XK_nabla, "nabla"},
    {XK_approximate, "approximate"},
    {XK_similarequal, "similarequal"},
    {XK_ifonlyif, "ifonlyif"},
    {XK_implies, "implies"},
    {XK_identical, "identical"},
    {XK_radical, "radical"},
    {XK_includedin, "includedin"},
    {XK_includes, "includes"},
    {XK_intersection, "intersection"},
    {XK_union, "union"},
    {XK_logicaland, "logicaland"},
    {XK_logicalor, "logicalor"},
    {XK_partialderivative, "partialderivative"},
    {XK_function, "function"},
    {XK_leftarrow, "leftarrow"},
    {XK_uparrow, "uparrow"},
    {XK_rightarrow, "rightarrow"},
    {XK_downarrow, "downarrow"},
    #endif /* XK_TECHNICAL */
    #ifdef XK_SPECIAL
    {XK_blank, "blank"},
    {XK_soliddiamond, "soliddiamond"},
    {XK_checkerboard, "checkerboard"},
    {XK_ht, "ht"},
    {XK_ff, "ff"},
    {XK_cr, "cr"},
    {XK_lf, "lf"},
    {XK_nl, "nl"},
    {XK_vt, "vt"},
    {XK_lowrightcorner, "lowrightcorner"},
    {XK_uprightcorner, "uprightcorner"},
    {XK_upleftcorner, "upleftcorner"},
    {XK_lowleftcorner, "lowleftcorner"},
    {XK_crossinglines, "crossinglines"},
    {XK_horizlinescan1, "horizlinescan1"},
    {XK_horizlinescan3, "horizlinescan3"},
    {XK_horizlinescan5, "horizlinescan5"},
    {XK_horizlinescan7, "horizlinescan7"},
    {XK_horizlinescan9, "horizlinescan9"},
    {XK_leftt, "leftt"},
    {XK_rightt, "rightt"},
    {XK_bott, "bott"},
    {XK_topt, "topt"},
    {XK_vertbar, "vertbar"},
    #endif /* XK_SPECIAL */
    #ifdef XK_PUBLISHING
    {XK_emspace, "emspace"},
    {XK_enspace, "enspace"},
    {XK_em3space, "em3space"},
    {XK_em4space, "em4space"},
    {XK_digitspace, "digitspace"},
    {XK_punctspace, "punctspace"},
    {XK_thinspace, "thinspace"},
    {XK_hairspace, "hairspace"},
    {XK_emdash, "emdash"},
    {XK_endash, "endash"},
    {XK_signifblank, "signifblank"},
    {XK_ellipsis, "ellipsis"},
    {XK_doubbaselinedot, "doubbaselinedot"},
    {XK_onethird, "onethird"},
    {XK_twothirds, "twothirds"},
    {XK_onefifth, "onefifth"},
    {XK_twofifths, "twofifths"},
    {XK_threefifths, "threefifths"},
    {XK_fourfifths, "fourfifths"},
    {XK_onesixth, "onesixth"},
    {XK_fivesixths, "fivesixths"},
    {XK_careof, "careof"},
    {XK_figdash, "figdash"},
    {XK_leftanglebracket, "leftanglebracket"},
    {XK_decimalpoint, "decimalpoint"},
    {XK_rightanglebracket, "rightanglebracket"},
    {XK_marker, "marker"},
    {XK_oneeighth, "oneeighth"},
    {XK_threeeighths, "threeeighths"},
    {XK_fiveeighths, "fiveeighths"},
    {XK_seveneighths, "seveneighths"},
    {XK_trademark, "trademark"},
    {XK_signaturemark, "signaturemark"},
    {XK_trademarkincircle, "trademarkincircle"},
    {XK_leftopentriangle, "leftopentriangle"},
    {XK_rightopentriangle, "rightopentriangle"},
    {XK_emopencircle, "emopencircle"},
    {XK_emopenrectangle, "emopenrectangle"},
    {XK_leftsinglequotemark, "leftsinglequotemark"},
    {XK_rightsinglequotemark, "rightsinglequotemark"},
    {XK_leftdoublequotemark, "leftdoublequotemark"},
    {XK_rightdoublequotemark, "rightdoublequotemark"},
    {XK_prescription, "prescription"},
    {XK_minutes, "minutes"},
    {XK_seconds, "seconds"},
    {XK_latincross, "latincross"},
    {XK_hexagram, "hexagram"},
    {XK_filledrectbullet, "filledrectbullet"},
    {XK_filledlefttribullet, "filledlefttribullet"},
    {XK_filledrighttribullet, "filledrighttribullet"},
    {XK_emfilledcircle, "emfilledcircle"},
    {XK_emfilledrect, "emfilledrect"},
    {XK_enopencircbullet, "enopencircbullet"},
    {XK_enopensquarebullet, "enopensquarebullet"},
    {XK_openrectbullet, "openrectbullet"},
    {XK_opentribulletup, "opentribulletup"},
    {XK_opentribulletdown, "opentribulletdown"},
    {XK_openstar, "openstar"},
    {XK_enfilledcircbullet, "enfilledcircbullet"},
    {XK_enfilledsqbullet, "enfilledsqbullet"},
    {XK_filledtribulletup, "filledtribulletup"},
    {XK_filledtribulletdown, "filledtribulletdown"},
    {XK_leftpointer, "leftpointer"},
    {XK_rightpointer, "rightpointer"},
    {XK_club, "club"},
    {XK_diamond, "diamond"},
    {XK_heart, "heart"},
    {XK_maltesecross, "maltesecross"},
    {XK_dagger, "dagger"},
    {XK_doubledagger, "doubledagger"},
    {XK_checkmark, "checkmark"},
    {XK_ballotcross, "ballotcross"},
    {XK_musicalsharp, "musicalsharp"},
    {XK_musicalflat, "musicalflat"},
    {XK_malesymbol, "malesymbol"},
    {XK_femalesymbol, "femalesymbol"},
    {XK_telephone, "telephone"},
    {XK_telephonerecorder, "telephonerecorder"},
    {XK_phonographcopyright, "phonographcopyright"},
    {XK_caret, "caret"},
    {XK_singlelowquotemark, "singlelowquotemark"},
    {XK_doublelowquotemark, "doublelowquotemark"},
    {XK_cursor, "cursor"},
    #endif /* XK_PUBLISHING */
    #ifdef XK_APL
    {XK_leftcaret, "leftcaret"},
    {XK_rightcaret, "rightcaret"},
    {XK_downcaret, "downcaret"},
    {XK_upcaret, "upcaret"},
    {XK_overbar, "overbar"},
    {XK_downtack, "downtack"},
    {XK_upshoe, "upshoe"},
    {XK_downstile, "downstile"},
    {XK_underbar, "underbar"},
    {XK_jot, "jot"},
    {XK_quad, "quad"},
    {XK_uptack, "uptack"},
    {XK_circle, "circle"},
    {XK_upstile, "upstile"},
    {XK_downshoe, "downshoe"},
    {XK_rightshoe, "rightshoe"},
    {XK_leftshoe, "leftshoe"},
    {XK_lefttack, "lefttack"},
    {XK_righttack, "righttack"},
    #endif /* XK_APL */
    #ifdef XK_HEBREW
    {XK_hebrew_doublelowline, "hebrew_doublelowline"},
    {XK_hebrew_aleph, "hebrew_aleph"},
    {XK_hebrew_bet, "hebrew_bet"},
    {XK_hebrew_beth, "hebrew_beth"},
    {XK_hebrew_gimel, "hebrew_gimel"},
    {XK_hebrew_gimmel, "hebrew_gimmel"},
    {XK_hebrew_dalet, "hebrew_dalet"},
    {XK_hebrew_daleth, "hebrew_daleth"},
    {XK_hebrew_he, "hebrew_he"},
    {XK_hebrew_waw, "hebrew_waw"},
    {XK_hebrew_zain, "hebrew_zain"},
    {XK_hebrew_zayin, "hebrew_zayin"},
    {XK_hebrew_chet, "hebrew_chet"},
    {XK_hebrew_het, "hebrew_het"},
    {XK_hebrew_tet, "hebrew_tet"},
    {XK_hebrew_teth, "hebrew_teth"},
    {XK_hebrew_yod, "hebrew_yod"},
    {XK_hebrew_finalkaph, "hebrew_finalkaph"},
    {XK_hebrew_kaph, "hebrew_kaph"},
    {XK_hebrew_lamed, "hebrew_lamed"},
    {XK_hebrew_finalmem, "hebrew_finalmem"},
    {XK_hebrew_mem, "hebrew_mem"},
    {XK_hebrew_finalnun, "hebrew_finalnun"},
    {XK_hebrew_nun, "hebrew_nun"},
    {XK_hebrew_samech, "hebrew_samech"},
    {XK_hebrew_samekh, "hebrew_samekh"},
    {XK_hebrew_ayin, "hebrew_ayin"},
    {XK_hebrew_finalpe, "hebrew_finalpe"},
    {XK_hebrew_pe, "hebrew_pe"},
    {XK_hebrew_finalzade, "hebrew_finalzade"},
    {XK_hebrew_finalzadi, "hebrew_finalzadi"},
    {XK_hebrew_zade, "hebrew_zade"},
    {XK_hebrew_zadi, "hebrew_zadi"},
    {XK_hebrew_qoph, "hebrew_qoph"},
    {XK_hebrew_kuf, "hebrew_kuf"},
    {XK_hebrew_resh, "hebrew_resh"},
    {XK_hebrew_shin, "hebrew_shin"},
    {XK_hebrew_taw, "hebrew_taw"},
    {XK_hebrew_taf, "hebrew_taf"},
    {XK_Hebrew_switch, "Hebrew_switch"},
    #endif /* XK_HEBREW */
};

#define KEY_SYM_LIST_LENGTH (sizeof(KEY_SYM_LIST) / sizeof(KEY_SYM_LIST[0]))

static const struct {
    SDL_Keycode keycode;
    KeySym keysym;
} SDLKeycodeToKeySym[] = {
    { SDLK_UNKNOWN, NoSymbol },
    { SDLK_BACKSPACE, XK_BackSpace },
    { SDLK_TAB, XK_Tab },
    { SDLK_RETURN, XK_Return },
    { SDLK_ESCAPE, XK_Escape },
    { SDLK_SPACE, XK_space },
    { SDLK_EXCLAIM, XK_exclam },
    { SDLK_QUOTEDBL, XK_quotedbl },
    { SDLK_HASH, XK_numbersign },
    { SDLK_DOLLAR, XK_dollar },
    { SDLK_PERCENT, XK_percent },
    { SDLK_AMPERSAND, XK_ampersand},
    { SDLK_QUOTE, XK_quoteright },
    { SDLK_LEFTPAREN, XK_parenleft },
    { SDLK_RIGHTPAREN, XK_parenright },
    { SDLK_ASTERISK, XK_asterisk },
    { SDLK_PLUS, XK_plus },
    { SDLK_COMMA, XK_comma },
    { SDLK_MINUS, XK_minus },
    { SDLK_PERIOD, XK_period },
    { SDLK_SLASH, XK_slash},
    { SDLK_COLON, XK_colon },
    { SDLK_SEMICOLON, XK_semicolon },
    { SDLK_LESS, XK_less },
    { SDLK_EQUALS, XK_equal },
    { SDLK_GREATER, XK_greater },
    { SDLK_QUESTION, XK_question },
    { SDLK_AT, XK_at },
    { SDLK_LEFTBRACKET, XK_bracketleft },
    { SDLK_BACKSLASH, XK_backslash },
    { SDLK_RIGHTBRACKET, XK_bracketright },
    { SDLK_CARET, XK_asciicircum },
    { SDLK_UNDERSCORE, XK_underscore },
    { SDLK_BACKQUOTE, XK_quoteleft },
    { SDLK_DELETE, XK_Delete },
    { SDLK_CAPSLOCK, XK_Caps_Lock },
    { SDLK_F1, XK_F1 },
    { SDLK_F2, XK_F2 },
    { SDLK_F3, XK_F3 },
    { SDLK_F4, XK_F4 },
    { SDLK_F5, XK_F5 },
    { SDLK_F6, XK_F6 },
    { SDLK_F7, XK_F7 },
    { SDLK_F8, XK_F8 },
    { SDLK_F9, XK_F9 },
    { SDLK_F10, XK_F10 },
    { SDLK_F11, XK_F11 },
    { SDLK_F12, XK_F12 },
    { SDLK_PRINTSCREEN, XK_Print },
    { SDLK_SCROLLLOCK, XK_Scroll_Lock },
    { SDLK_PAUSE, XK_Pause },
    { SDLK_INSERT, XK_Insert },
    { SDLK_HOME, XK_Home },
    { SDLK_PAGEUP, XK_Prior },
    { SDLK_END, XK_End },
    { SDLK_PAGEDOWN, XK_Next },
    { SDLK_RIGHT, XK_Right },
    { SDLK_LEFT, XK_Left },
    { SDLK_DOWN, XK_Down },
    { SDLK_UP, XK_Up },
    { SDLK_NUMLOCKCLEAR, XK_Num_Lock },
    { SDLK_KP_DIVIDE, XK_KP_Divide },
    { SDLK_KP_MULTIPLY, XK_KP_Multiply },
    { SDLK_KP_MINUS, XK_KP_Subtract },
    { SDLK_KP_PLUS, XK_KP_Add },
    { SDLK_KP_ENTER, XK_KP_Enter },
    { SDLK_KP_1, XK_KP_1 },
    { SDLK_KP_2, XK_KP_2 },
    { SDLK_KP_3, XK_KP_3 },
    { SDLK_KP_4, XK_KP_4 },
    { SDLK_KP_5, XK_KP_5 },
    { SDLK_KP_6, XK_KP_6 },
    { SDLK_KP_7, XK_KP_7 },
    { SDLK_KP_8, XK_KP_8 },
    { SDLK_KP_9, XK_KP_9 },
    { SDLK_KP_0, XK_KP_0 },
    { SDLK_KP_PERIOD, XK_KP_Decimal },
    { SDLK_APPLICATION, XK_Hyper_R },
    { SDLK_KP_EQUALS, XK_KP_Equal },
    { SDLK_F13, XK_F13 },
    { SDLK_F14, XK_F14 },
    { SDLK_F15, XK_F15 },
    { SDLK_F16, XK_F16 },
    { SDLK_F17, XK_F17 },
    { SDLK_F18, XK_F18 },
    { SDLK_F19, XK_F19 },
    { SDLK_F20, XK_F20 },
    { SDLK_F21, XK_F21 },
    { SDLK_F22, XK_F22 },
    { SDLK_F23, XK_F23 },
    { SDLK_F24, XK_F24 },
    { SDLK_EXECUTE, XK_Execute },
    { SDLK_HELP, XK_Help },
    { SDLK_MENU, XK_Menu },
    { SDLK_SELECT, XK_Select },
    { SDLK_STOP, XK_Cancel },
    { SDLK_AGAIN, XK_Redo },
    { SDLK_UNDO, XK_Undo },
    { SDLK_FIND, XK_Find },
    { SDLK_KP_COMMA, XK_KP_Separator },
    { SDLK_KP_EQUALSAS400, XK_KP_Equal },
    { SDLK_ALTERASE, XK_Delete },
    { SDLK_CANCEL, XK_Cancel },
    { SDLK_CLEAR, XK_Clear },
    { SDLK_PRIOR, XK_Prior },
    { SDLK_RETURN2, XK_Return },
    { SDLK_SEPARATOR, XK_KP_Separator },
    { SDLK_THOUSANDSSEPARATOR, XK_KP_Separator },
    #ifdef XK_PUBLISHING
    { SDLK_DECIMALSEPARATOR, XK_decimalpoint },
    #endif /* XK_PUBLISHING */
    { SDLK_CURRENCYUNIT, XK_currency },
    { SDLK_CURRENCYSUBUNIT, XK_currency },
    { SDLK_KP_LEFTPAREN, XK_parenleft },
    { SDLK_KP_RIGHTPAREN, XK_parenright },
    { SDLK_KP_LEFTBRACE , XK_braceleft },
    { SDLK_KP_RIGHTBRACE , XK_braceright },
    { SDLK_KP_TAB, XK_KP_Tab },
    { SDLK_KP_BACKSPACE, XK_BackSpace },
    { SDLK_KP_A, XK_a },
    { SDLK_KP_B, XK_b },
    { SDLK_KP_C, XK_c },
    { SDLK_KP_D, XK_d },
    { SDLK_KP_E, XK_e },
    { SDLK_KP_F, XK_f },
    { SDLK_KP_PERCENT, XK_percent },
    { SDLK_KP_LESS, XK_less },
    { SDLK_KP_GREATER, XK_greater },
    { SDLK_KP_AMPERSAND, XK_ampersand},
    { SDLK_KP_VERTICALBAR, XK_bar},
    { SDLK_KP_COLON, XK_colon},
    { SDLK_KP_HASH, XK_numbersign },
    { SDLK_KP_SPACE, XK_KP_Space },
    { SDLK_KP_AT, XK_at },
    { SDLK_KP_PLUSMINUS, XK_plusminus },
    { SDLK_KP_CLEAR, XK_Clear },
    { SDLK_KP_DECIMAL, XK_KP_Decimal },
    { SDLK_LCTRL, XK_Control_L },
    { SDLK_LSHIFT, XK_Shift_L },
    { SDLK_LALT, XK_Alt_L },
    { SDLK_LGUI, XK_Meta_L },
    { SDLK_RCTRL, XK_Control_R },
    { SDLK_RSHIFT, XK_Shift_R },
    { SDLK_RALT, XK_Alt_R },
    { SDLK_RGUI, XK_Meta_R },
    { SDLK_MODE, XK_Mode_switch },
    { SDLK_AC_SEARCH, XK_Find },
    { SDLK_AC_HOME, XK_Home },
    { SDLK_SYSREQ, XK_Sys_Req },
    /* Missing in X11:
     *  SDLK_POWER, SDLK_CUT, SDLK_COPY, SDLK_PASTE, SDLK_MUTE, SDLK_VOLUMEUP, SDLK_VOLUMEDOWN,
     *  SDLK_OUT, SDLK_OPER, SDLK_CLEARAGAIN, SDLK_CRSEL, SDLK_EXSEL, SDLK_KP_00, SDLK_KP_000,
     *  SDLK_KP_XOR, SDLK_KP_POWER, SDLK_KP_DBLAMPERSAND, SDLK_KP_DBLVERTICALBAR, SDLK_KP_MEMSTORE,
     *  SDLK_KP_MEMRECALL, SDLK_KP_MEMCLEAR, SDLK_KP_MEMADD, SDLK_KP_MEMSUBTRACT,
     *  SDLK_KP_MEMMULTIPLY, SDLK_KP_MEMDIVIDE, SDLK_KP_CLEARENTRY, SDLK_KP_BINARY, SDLK_KP_OCTAL,
     *  SDLK_KP_HEXADECIMAL, SDLK_AUDIONEXT, SDLK_AUDIOPREV, SDLK_AUDIOSTOP, SDLK_AUDIOPLAY,
     *  SDLK_AUDIOMUTE, SDLK_MEDIASELECT, SDLK_WWW, SDLK_MAIL, SDLK_CALCULATOR, SDLK_COMPUTER,
     *  SDLK_AC_BACK, SDLK_AC_FORWARD, SDLK_AC_STOP, SDLK_AC_REFRESH, SDLK_AC_BOOKMARKS,
     *  SDLK_BRIGHTNESSDOWN, SDLK_BRIGHTNESSUP, SDLK_DISPLAYSWITCH, SDLK_KBDILLUMTOGGLE,
     *  SDLK_KBDILLUMDOWN, SDLK_KBDILLUMUP, SDLK_EJECT, SDLK_SLEEP
     */
};

#define SDL_KEYCODE_TO_KEYSYM_LENGTH (sizeof(SDLKeycodeToKeySym) / sizeof(SDLKeycodeToKeySym[0]))

#endif /* _KEY_SYM_LIST_H_ */
